% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/salim.gen.R
\name{ggplot2_theme_html}
\alias{ggplot2_theme_html}
\title{Add common HTML-specific theme to ggplot2 chart}
\usage{
ggplot2_theme_html(
  .color_text = pal::pkg_config_val(key = "plot_color_body", pkg = this_pkg),
  .color_bg = pal::pkg_config_val(key = "plot_color_bg", pkg = this_pkg),
  .color_grid = pal::pkg_config_val(key = "plot_color_grid", pkg = this_pkg),
  ...
)
}
\arguments{
\item{.color_text}{Text color to use for all text elements (\code{\link[ggplot2:element]{ggplot2::element_text()}}) when the knitr output format \link[knitr:output_type]{is HTML}.}

\item{.color_bg}{Background color to use when the knitr output format \link[knitr:output_type]{is HTML}.}

\item{.color_grid}{Grid color to use when the knitr output format \link[knitr:output_type]{is HTML}.}

\item{...}{Further arguments passed on to \code{\link[ggplot2:theme]{ggplot2::theme()}} when the knitr output format \link[knitr:output_type]{is HTML}.}
}
\value{
An object of class \code{\link[ggplot2:theme]{theme}}.
}
\description{
Dynamically adds common HTML-specific \link[ggplot2:theme]{theming} to a \link[ggplot2:ggplot2-package]{ggplot2} chart. It depends on the current \link[knitr:output_type]{knitr output format} whether the additional HTML-specific theming is actually added or not.
}
\details{
Note that \code{ggplot2_theme_html()} must be evaluated \emph{during} \link[knitr:knit]{knitting} to work properly.
}
\examples{
sysfonts::font_add_google(name = "Alegreya Sans")
showtext::showtext_auto()

ggplot2::ggplot(data = mtcars,
                mapping = ggplot2::aes(x = mpg,
                                       y = cyl)) +
  ggplot2::geom_point() +
  salim::ggplot2_theme() +
  salim::ggplot2_theme_html()
}
\seealso{
Other plot theming functions:
\code{\link{ggplot2_geom_defaults}()},
\code{\link{ggplot2_theme}()},
\code{\link{plotly_layout}()}
}
\concept{plot_theme}
