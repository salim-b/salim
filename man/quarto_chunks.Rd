% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/salim.gen.R
\name{quarto_chunks}
\alias{quarto_chunks}
\title{Generate Quarto knitr code chunk snippets from structured data}
\usage{
quarto_chunks(data, env = parent.frame())
}
\arguments{
\item{data}{Input data as returned by \code{\link[=read_quarto_chunk_data]{read_quarto_chunk_data()}}. A dataframe where column names correspond to chunk options supported by
\code{\link[=quarto_fig_chunk]{quarto_fig_chunk()}} or \code{\link[=quarto_tbl_chunk]{quarto_tbl_chunk()}} plus the optional iteration variable columns \code{itr_vars} and \code{itr_vars_r}. Columns \code{body}, \code{label} and
\code{fig_cap}/\code{tbl_cap} are mandatory. See section \emph{Input \code{data}} for details.}

\item{env}{Environment to evaluate iterations in (see section \emph{Iteration variables} for details).}
}
\value{
\code{data}, invisibly.
}
\description{
Generates Quarto Markdown (\code{.qmd}) file snippets with knitr \link[=quarto_fig_chunk]{figure} or \link[=quarto_tbl_chunk]{table} code chunks from structured \code{data}.
}
\details{
The generated \code{.qmd} files are intended to be included in other Quarto documents via the built-in
\href{https://quarto.org/docs/authoring/includes.html}{\code{include}} shortcode.
}
\section{Input \code{data}}{
All \code{data} columns of type character are \code{\link[cli:pluralize]{cli::pluralize()}}d, meaning literal curly brackets (\verb{\{} and \verb{\}}) need to be escaped by doubling them (to \verb{\{\{} and
\verb{\}\}}).

The column names of \code{data} can either correspond to \code{\link[=quarto_fig_chunk]{quarto_fig_chunk()}}/\code{\link[=quarto_tbl_chunk]{quarto_tbl_chunk()}}'s argument names (in \href{https://en.wikipedia.org/wiki/Snake_case}{snake case}), to \href{https://yihui.org/knitr/options/#plots}{knitr's figure chunk option names} (period-separared) or
directly to Quarto's
\href{https://quarto.org/docs/reference/cells/cells-knitr.html#figures}{figure}/\href{https://quarto.org/docs/reference/cells/cells-knitr.html#tables}{table} code
chunk option names (in \href{https://en.wikipedia.org/wiki/Letter_case#Kebab_case}{kebab case}) â€“ they will be converted as needed.

Additional column names are silently ignored, except for the optional iteration variable columns \code{itr_vars} (of type list) and \code{itr_vars_r} (of type
character).
}

\section{Iteration variables}{
Specifying iteration variables allows to produce multiple code chunks per \code{data} row. The iteration variables can be referred to in the other columns via
\code{\link[cli:pluralize]{cli::pluralize()}}'s string interpolation syntax (i.e. R code in curly brackets).

The \code{itr_vars} column must be a list of named lists (or \code{NULL} for no iteration on the respective rows). The \code{itr_vars_r} column allows to specify \code{itr_vars}
as a string of R code (which must yield a list of named lists / \code{NULL}s when parsed and executed).
}

\examples{
# data row without iterations
tibble::tibble(label = "fig-cars",
               fig_cap = "Today's ({lubridate::today()}) top figure",
               fig_column = "page",
               fig_height = 8L,
               body = "plot(cars)") |>
  salim::quarto_chunks()

# data row with iteration variables specified directly as `itr_vars`
tibble::tibble(itr_vars = list(list(v = "cyl"),
                               list(v = "disp"),
                               list(v = "hp")),
               label = "fig-mpg-by-{v}",
               fig_cap = "Motor Trend Car Road Tests: mpg per {v}",
               fig_column = "screen",
               fig_height = 8L,
               body = "plot(x = mtcars$mpg, y = mtcars${v})") |>
  salim::quarto_chunks()

# data row with iteration variables specified indirectly as `itr_vars_r` code
tibble::tibble(itr_vars_r = "purrr::map(colnames(mtcars)[5:7], \\\\(x) list(v = x))",
               label = "fig-mpg-by-{v}",
               fig_cap = "Motor Trend Car Road Tests: mpg per {v}",
               fig_column = "screen",
               fig_height = 8L,
               body = "plot(x = mtcars$mpg, y = mtcars${v})") |>
  salim::quarto_chunks()
}
\seealso{
Other Quarto functions:
\code{\link{quarto_fig_chunk}()},
\code{\link{quarto_tbl_chunk}()},
\code{\link{read_quarto_chunk_data}()}
}
\concept{quarto}
